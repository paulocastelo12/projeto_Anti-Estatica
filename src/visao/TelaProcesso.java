/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import UTIL.ArduinoSerial;
import UTIL.ManipularImagem;
import br.com.cis.biox.sdk.CisBiox;
import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.bean.Funcionario;
import modelo.bean.Registro;
import modelo.dao.FuncionarioDAO;
import modelo.dao.RegistroDAO;

/**
 *
 * @author DTI
 */
public class TelaProcesso extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaProcesso
     */
    String valor = null;
    ArduinoSerial arduino = new ArduinoSerial("COM15");

    public TelaProcesso() {
        initComponents();
        btProcessoBio.requestFocus();
        jTdata.setVisible(false);
        jThora.setVisible(false);

        new Thread(teste).start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jTprocesso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLimagem = new javax.swing.JLabel();
        jLColaborador = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jTdata = new javax.swing.JTextField();
        jThora = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btProcessoBio = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jCport = new javax.swing.JComboBox<>();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setClosable(true);
        setTitle("Registro Processo");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTprocesso.setEditable(false);
        jTprocesso.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTprocesso.setEnabled(false);
        jTprocesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTprocessoActionPerformed(evt);
            }
        });
        jTprocesso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTprocessoKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Matr√≠cula:");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Foto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        jLimagem.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLimagem.setForeground(new java.awt.Color(255, 0, 51));

        jLColaborador.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLColaborador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLColaborador.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLimagem, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLimagem, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLColaborador, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTextArea.setColumns(20);
        jTextArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jTextArea.setRows(5);
        jScrollPane1.setViewportView(jTextArea);

        jThora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jThoraActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Sair.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btProcessoBio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/biomatria64.png"))); // NOI18N
        btProcessoBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcessoBioActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Biometria");

        lbStatus.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Port COM:");

        jCport.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jCport.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COM15" }));
        jCport.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(417, 417, 417)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTdata, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jThora, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTprocesso, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(83, 83, 83)
                                .addComponent(btProcessoBio, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btProcessoBio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCport, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTprocesso, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(14, 21, Short.MAX_VALUE)
                        .addComponent(jTdata, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jThora, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(lbStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(210, 25, 1025, 561);
    }// </editor-fold>//GEN-END:initComponents

    private void jTprocessoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTprocessoKeyReleased


    }//GEN-LAST:event_jTprocessoKeyReleased

    private void jTprocessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTprocessoActionPerformed
        try {
            int codigo = Integer.parseInt(jTprocesso.getText());
            FuncionarioDAO bd = new FuncionarioDAO();
            Funcionario funcionario = bd.consultarCodigo(codigo);
            if (funcionario == null) {
                JOptionPane.showMessageDialog(null, "Funcion√°rio n√£o encontrado");
            } else {
                Date data = new Date();
                SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/YYYY");
                String dataFormatada = formatar.format(data);

                Date data2 = new Date();
                SimpleDateFormat formatar2 = new SimpleDateFormat("YYYY-MM-dd");
                String dataFormatada2 = formatar2.format(data2);

                Calendar c = Calendar.getInstance(); //retorna um calendar com a hora do sistema
                c.get(Calendar.HOUR_OF_DAY); //retorna a hora, com valor de 0 a 23
                c.get(Calendar.MINUTE);//retorna os minutos
                c.get(Calendar.SECOND);//retorna os segundos
                c.get(Calendar.MILLISECOND);//retorna os milisegundo

                String hora = c.get(Calendar.HOUR_OF_DAY) + ":" + c.get(Calendar.MINUTE) + ":" + c.get(Calendar.SECOND);

                jTextArea.append("Setor/Departamento: " + funcionario.getSetor());
                jTextArea.append("\n");
                jTextArea.append("\n" + "Cargo/Fun√ß√£o: " + funcionario.getCargo());
                jTextArea.append("\n");
                jTextArea.append("\n" + dataFormatada + " " + hora);
                jTextArea.append("\n");
                jTextArea.append("---------------||--------------");
                ManipularImagem.exibiImagemLabel(funcionario.getImagem(), jLimagem);

                jTprocesso.setText(funcionario.getMatricula().toString());
                jLColaborador.setText(funcionario.getNome());
                jTdata.setText(dataFormatada2);
                jThora.setText(hora);

                //btRegistro.requestFocus();
            }

            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(TelaProcesso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTprocessoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btProcessoBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcessoBioActionPerformed
        CisBiox biox = new CisBiox();
        biox.finalizar();
        int iRetorno = biox.iniciar();

        if (iRetorno != 1) {
            JOptionPane.showMessageDialog(null, "Erro: " + CisBiox.mensagens(iRetorno));
            return;
        }

        new Thread(LerDigital1).start();

    }//GEN-LAST:event_btProcessoBioActionPerformed

    private void jThoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jThoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jThoraActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btProcessoBio;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jCport;
    private javax.swing.JLabel jLColaborador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLimagem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTdata;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jThora;
    private javax.swing.JTextField jTprocesso;
    private javax.swing.JLabel lbStatus;
    // End of variables declaration//GEN-END:variables
public void salvarRegistro(String status) {
        Registro registro = new Registro();
        RegistroDAO registroDao = new RegistroDAO();

        Funcionario funcionario = new Funcionario();

        registro.setStatus(status);
        registro.setData(jTdata.getText());
        registro.setHora(jThora.getText());

        funcionario.setMatricula(Integer.parseInt(jTprocesso.getText()));
        registro.setFuncionario(funcionario);
        try {
            registroDao.salvar(registro);

            jTextArea.setText("");
            jTprocesso.setText("");
            jLColaborador.setText("");
            jLimagem.setIcon(null);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Registra Funcionario!" + ex.getMessage());
        }

    }

    private Runnable teste = new Runnable() {
        @Override
        public void run() {
            arduino.initialize();

            while (true) {

                valor = arduino.read();

                if ("Aprovado".equals(valor)) {
                    //JOptionPane.showMessageDialog(null, "entrou");
                    Font f = new Font("SansSerif", Font.BOLD, 46);
                    lbStatus.setFont(f);
                    Color verde = new Color(0,128,0);
                   
                    lbStatus.setText("Teste " + valor);
                    lbStatus.setForeground(verde);
                    //btRegistro.setEnabled(true);
                    //btRegistroReprovado.setEnabled(false);

                    if ("".equals(jTprocesso.getText())) {
                        lbStatus.setFont(f);
                        lbStatus.setForeground(Color.red);
                        lbStatus.setText("Biometria n√£o inserida!");

                        try {
                            arduino.send("l");
                            Thread.sleep(2000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(TelaProcesso.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } else {
                        String status = "Aprovado";
                        salvarRegistro(status);

                        try {
                            arduino.send("l");
                            Thread.sleep(2000);

                            //btRegistro.setEnabled(false);
                            //btRegistroReprovado.setEnabled(false);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(TelaProcesso.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                } else if ("Reprovado".equals(valor)) {
                    Font f = new Font("SansSerif", Font.BOLD, 46);
                    lbStatus.setFont(f);
                    lbStatus.setForeground(Color.red);
                    lbStatus.setText("Teste " + valor);
                    // btRegistro.setEnabled(false);
                    //btRegistroReprovado.setEnabled(true);

                    if ("".equals(jTprocesso.getText())) {

                        lbStatus.setFont(f);
                        lbStatus.setForeground(Color.red);
                        lbStatus.setText("Biometria n√£o inserida!");

                        try {
                            arduino.send("l");
                            Thread.sleep(2000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(TelaProcesso.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } else {
                        String status = "Reprovado";
                        salvarRegistro(status);

                        try {
                            arduino.send("l");
                            Thread.sleep(2000);

                            // btRegistro.setEnabled(false);
                            //btRegistroReprovado.setEnabled(false);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(TelaProcesso.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                } else {
                    Font f = new Font("SansSerif", Font.BOLD, 42);
                    lbStatus.setFont(f);
                    lbStatus.setForeground(Color.black);
                    lbStatus.setText("Pressione o bot√£o Test");
                    //btRegistro.setEnabled(false);
                    //btRegistroReprovado.setEnabled(false);
                }

            }
        }
    };

    private Runnable LerDigital1 = new Runnable() {
        @Override
        public void run() {

            CisBiox biox = new CisBiox();
            byte[] digital1;

            digital1 = biox.capturarDigital();

            if (biox.getResultado() != 1) {
                biox.finalizar();
                return;
            }

            int iRetorno = biox.finalizar();

            if (iRetorno != 1) {
                JOptionPane.showMessageDialog(null, "Erro: " + CisBiox.mensagens(iRetorno));
                return;
            }

//            biox.iniciar();
            FuncionarioDAO bd = new FuncionarioDAO();
            try {
                Funcionario funcionario = bd.consultarBiometria(digital1);

                if (funcionario.getMatricula() == null) {
                    JOptionPane.showMessageDialog(null, "Funcion√°rio n√£o encontrado");
                } else {
                    Date data = new Date();
                    SimpleDateFormat formatar = new SimpleDateFormat("dd/MM/YYYY");
                    String dataFormatada = formatar.format(data);

                    Date data2 = new Date();
                    SimpleDateFormat formatar2 = new SimpleDateFormat("YYYY-MM-dd");
                    String dataFormatada2 = formatar2.format(data2);

                    Calendar c = Calendar.getInstance(); //retorna um calendar com a hora do sistema
                    c.get(Calendar.HOUR_OF_DAY); //retorna a hora, com valor de 0 a 23
                    c.get(Calendar.MINUTE);//retorna os minutos
                    c.get(Calendar.SECOND);//retorna os segundos
                    c.get(Calendar.MILLISECOND);//retorna os milisegundo

                    String hora = c.get(Calendar.HOUR_OF_DAY) + ":" + c.get(Calendar.MINUTE) + ":" + c.get(Calendar.SECOND);

                    //JOptionPane.showMessageDialog(null, funcionario.getNome());
                    //JOptionPane.showMessageDialog(null, funcionario.getMatricula());
                    jTextArea.append("Setor/Departamento: " + funcionario.getSetor());
                    jTextArea.append("\n");
                    jTextArea.append("\n" + "Cargo/Fun√ß√£o: " + funcionario.getCargo());
                    jTextArea.append("\n");
                    jTextArea.append("\n" + "L√≠der/Respons√°vel: " + funcionario.getLider());
                    jTextArea.append("\n");
                    jTextArea.append("\n" + dataFormatada + " " + hora);
                    jTextArea.append("\n");
                    jTextArea.append("---------------||--------------");
                    ManipularImagem.exibiImagemLabel(funcionario.getImagem(), jLimagem);

                    jTprocesso.setText(funcionario.getMatricula().toString());
                    jLColaborador.setText(funcionario.getNome());
                    jTdata.setText(dataFormatada2);
                    jThora.setText(hora);

                }

            } catch (SQLException ex) {
                Logger.getLogger(TelaProcesso.class.getName()).log(Level.SEVERE, null, ex);
            }

            //JOptionPane.showMessageDialog(null, "Templante Gerado!");
        }
    };
}
