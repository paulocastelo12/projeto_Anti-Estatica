/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import modelo.bean.Registro;
import modelo.conexao.FabricaConexao;
import modelo.dao.RegistroDAO;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author DTI
 */
public class TelaRelatorio extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaRelatorio
     */
    public TelaRelatorio() {
        initComponents();
        listarTodosRegistros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTRegistros = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jCdatapesq = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jTpesquisar = new javax.swing.JButton();
        btlistarT = new javax.swing.JButton();
        jCrelsetor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Relatório de Registros");
        setToolTipText("");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "FUNCIONÁRIO", "MATRÍCULA", "DATA", "HORA", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTRegistros);
        if (jTRegistros.getColumnModel().getColumnCount() > 0) {
            jTRegistros.getColumnModel().getColumn(0).setResizable(false);
            jTRegistros.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTRegistros.getColumnModel().getColumn(1).setResizable(false);
            jTRegistros.getColumnModel().getColumn(2).setResizable(false);
            jTRegistros.getColumnModel().getColumn(2).setPreferredWidth(5);
            jTRegistros.getColumnModel().getColumn(3).setResizable(false);
            jTRegistros.getColumnModel().getColumn(4).setResizable(false);
            jTRegistros.getColumnModel().getColumn(5).setResizable(false);
        }

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText("Gerar Impressão");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(452, 452, 452)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jCdatapesq.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Data:");

        jTpesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/pesquisar32.png"))); // NOI18N
        jTpesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTpesquisarActionPerformed(evt);
            }
        });

        btlistarT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Atualizar.png"))); // NOI18N
        btlistarT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlistarTActionPerformed(evt);
            }
        });

        jCrelsetor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jCrelsetor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<SELECIONE>", "Produção 01", "Produção 02", "Almoxarifado", "Qualidade", "Área Técnica", "SMD", "DTI", "Engenharia", "Area Técnica", "Manutencação" }));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setText("Setor/Departamento:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCdatapesq, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCrelsetor, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTpesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btlistarT, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCrelsetor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(btlistarT, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTpesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jCdatapesq, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(150, 25, 1078, 561);
    }// </editor-fold>//GEN-END:initComponents

    private void jTpesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTpesquisarActionPerformed

        if (jCdatapesq.getDate() != null) {
            SimpleDateFormat formatar = new SimpleDateFormat("YYYY-MM-dd");
            String dataFormatada = formatar.format(this.jCdatapesq.getDate());

            String setor = jCrelsetor.getSelectedItem().toString();
            listarRegistrosPorData(dataFormatada, setor);
        } else {
            JOptionPane.showMessageDialog(null, "Preencha campo Data!");
        }


    }//GEN-LAST:event_jTpesquisarActionPerformed

    private void btlistarTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlistarTActionPerformed
        listarTodosRegistros();
        jCdatapesq.setDate(null);
    }//GEN-LAST:event_btlistarTActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        GeraRelatorioPonto();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btlistarT;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jCdatapesq;
    private javax.swing.JComboBox<String> jCrelsetor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTRegistros;
    private javax.swing.JButton jTpesquisar;
    // End of variables declaration//GEN-END:variables

    private void limpaTabela() {

        DefaultTableModel tab = (DefaultTableModel) jTRegistros.getModel();
        int linha = jTRegistros.getRowCount();
        for (int i = linha - 1; i >= 0; --i) {
            tab.removeRow(i);

        }
    }//fim do metodo limpar tabela

    public void listarTodosRegistros() {
        CorLinha();
        limpaTabela();
        DefaultTableModel tabela = (DefaultTableModel) jTRegistros.getModel();
        RegistroDAO registroDao = new RegistroDAO();
        try {
            List<Registro> lista = registroDao.listarTodos();

            for (Registro registro : lista) {
                tabela.addRow(new Object[]{"00" + registro.getCodigo(), registro.getFuncionario().getNome(), registro.getFuncionario().getMatricula(), registro.getData(), registro.getHora(), registro.getStatus()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void listarRegistrosPorData(String data, String setor) {
        limpaTabela();
        DefaultTableModel tabela = (DefaultTableModel) jTRegistros.getModel();
        RegistroDAO registroDao = new RegistroDAO();
        try {
            List<Registro> lista = registroDao.listaPorData(data, setor);

            for (Registro registro : lista) {
                tabela.addRow(new Object[]{"00" + registro.getCodigo(), registro.getFuncionario().getNome(), registro.getFuncionario().getMatricula(), registro.getData(), registro.getHora(), registro.getStatus()});
            }
        } catch (SQLException ex) {
            Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
        }

        CorLinha();
    }

    public void CorLinha() {

        jTRegistros.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                //A coluna do status é 3
                Object ref = table.getValueAt(row, 5);//Coluna Status
                //Coloca cor em todas as linhas,COLUNA(3) que tem o valor "Reprovado"
                if (ref != null && ref.equals("Reprovado")) {//Se Status for igual a "Reprovado"
                    setBackground(new Color(215, 40, 40));//Preenche a linha de vermelho
                    setForeground(Color.WHITE);//E a fonte de branco
                    //215, 40, 40
                } else {
                    boolean sel = isSelected;
                    if (sel == true) {
                        setBackground(getBackground());
                        setForeground(getForeground());
                    } else {//Se Status não for "Aberto" 
                        setBackground(Color.WHITE);//Preenche a linha de branco
                        setForeground(new Color(51, 51, 51));//E a fonte de preto
                    }
                }
                return this;
            }
        });
    }

    private PreparedStatement pstm;
    private ResultSet rs;
    private String sql;
    Connection conexao;

    public void GeraRelatorioPonto() {

        if (jCdatapesq.getDate() != null) {
            SimpleDateFormat formatar = new SimpleDateFormat("YYYY-MM-dd");
            String dataFormatada = formatar.format(this.jCdatapesq.getDate());

            String setor = jCrelsetor.getSelectedItem().toString();

            String caminho = "C:/Relatorios/procis-1.jasper";
            sql = null;

            sql = "SELECT funmatricula,funnome,funsetor,funlider,regdata,reghora,regstatus FROM registro inner join funcionario on funmatricula = regfunmatricula where regdata like '" + dataFormatada + "' and funsetor like '" + setor + "'";

            RelatorioPonto(sql, caminho);
        } else {
            JOptionPane.showMessageDialog(null, "Preencha campo Data!");
        }

    }

    public boolean RelatorioPonto(String sql, String caminho) {
        try {
            conexao = FabricaConexao.conexaoBanco();

            pstm = conexao.prepareStatement(sql);
            rs = pstm.executeQuery();
            JRResultSetDataSource relatResul = new JRResultSetDataSource(rs);
            try {
                JasperPrint jpPrint = JasperFillManager.fillReport(caminho, new HashMap(), relatResul);
                JasperViewer jv = new JasperViewer(jpPrint, false);
                jv.setVisible(true);
            } catch (JRException ex) {
                Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TelaRelatorio.class.getName()).log(Level.SEVERE, null, ex);
        }

        return true;
    }
}
